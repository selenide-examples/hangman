defaultTasks 'clean', 'test'

apply plugin: 'java'

sourceSets {
  main {
    java { srcDir 'src' }
    resources { srcDir 'src' }
  }
  test {
    java { srcDir 'test' }
    resources { srcDir 'test' }
  }
}

repositories {
  mavenCentral()
}

[compileJava, compileTestJava]*.options.collect { options -> options.encoding = 'UTF-8' }
[compileJava, compileTestJava]*.options.collect { options -> options.debug = true }

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceCompatibility = 17
targetCompatibility = 17

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  jvmArgs = ['-ea', '-Xmx64m']
  systemProperties['file.encoding'] = 'UTF-8'
  systemProperties['user.country'] = 'TR'
  systemProperties['user.language'] = 'tr'
}

test {
  include 'ee/era/hangman/**'
}

tasks.register('uitest_firefox', Test) {
  systemProperties['selenide.browser'] = 'firefox'
}

tasks.register('uitest_edge', Test) {
  systemProperties['selenide.browser'] = 'edge'
}

tasks.register('uitest_chrome', Test) {
  systemProperties['selenide.browser'] = 'chrome'
}

tasks.withType(Test).configureEach {
  systemProperties['file.encoding'] = 'UTF-8'
  System.properties.stringPropertyNames()
    .findAll { it.startsWith("selenide.") }
    .forEach {
      println " set ${it} to ${System.getProperty(it)}"
      systemProperties[it] = System.getProperty(it)
    }
  testLogging.showStandardStreams = true
  outputs.upToDateWhen { false }
}

dependencies {
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
  implementation('org.liquibase:liquibase-core:4.31.1') {
    exclude(group: 'javax.xml.bind')
  }
  implementation 'com.google.guava:guava:33.4.6-jre'
  runtimeOnly 'com.h2database:h2:2.3.232'
  implementation 'c3p0:c3p0:0.9.1.2'
  implementation 'org.slf4j:slf4j-api:2.0.17'
  runtimeOnly 'org.slf4j:slf4j-log4j12:2.0.17'

  testImplementation platform("org.junit:junit-bom:5.12.1")
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.junit.platform:junit-platform-engine"
  testImplementation "org.junit.platform:junit-platform-launcher"

  testImplementation "org.assertj:assertj-core:3.27.3"
  testImplementation 'org.mockito:mockito-core:5.17.0'
  testImplementation 'com.codeborne:selenide:7.8.1'
}

configurations.configureEach {
  exclude group: "org.hamcrest"
  exclude group: "junit"
  exclude group: "io.opentelemetry.semconv"
  exclude group: "io.opentelemetry"
}

tasks.register('run', JavaExec) {
  dependsOn 'compileJava'
  mainClass = 'ee.era.hangman.Launcher'
  classpath = sourceSets.main.runtimeClasspath
  systemProperty 'file.encoding', 'UTF-8'
}
